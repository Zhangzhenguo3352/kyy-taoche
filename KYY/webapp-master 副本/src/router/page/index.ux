<import name="home" src="../../router/page/home"></import> <!-- 首页 -->
<import name="webviews"  src="../../router/page/webview"></import>

<template>
    <!-- template里只能有一个根节点 -->
    <div class="box-Main">
        <!-- table 下方切换的 地方 -->
        <div class="mian_box" if="{{showTabs}}">
            <div class="box">
                <tabs @change="tabsChange" id="tab" index="{{tabSelectedIndex}}">
                    <tab-bar>
                        <div class="tab-item" for="{{(index,item) in tabList}}" @click="tabItemClick(index)">
                            <image class="tab-icon" src="{{(index == tabSelectedIndex) ? item.selected :item.normal}}"></image>
                            <text style="font-size: 20px;" class="{{(index == tabSelectedIndex) ? 'selected' :'normal'}}">{{item.name}}</text>
                        </div>
                    </tab-bar>
                </tabs>
            </div>
        </div>
        
        <!-- <text>{{city}}</text> -->
        <div class="slef" style="padding-bottom: {{PaddBottom100}}">
                
            <home
                if="{{tabSelectedIndex === 0}}"
                location="{{location}}"
                city="{{city.cityName}}"
                locationstate="{{locationstate}}"
                selectlocation="{{selectlocation}}"
                h="{{ h }}"
            >
            </home>
            <webviews if="{{tabSelectedIndex === 1}}" webviewurl="{{webviewurl}}" title="买车"></webviews>
            <webviews if="{{tabSelectedIndex === 2}}" webviewurl="{{'http://cooper.m.taoche.com/cooper/sellcar/'}}" title="卖车"></webviews>
            <webviews if="{{tabSelectedIndex === 3}}" webviewurl="{{'http://cooper.m.taoche.com/pinggu/'}}" title="估价"></webviews>
        </div>
    </div>
</template>

<script>
    import router from '@system.router';
    import fetch from '@system.fetch'
    import prompt from '@system.prompt'
    import storage from '@system.storage'
    import geolocation from '@system.geolocation'
    import { inItdata } from '../../util/dataX.js'
    import { CC2PY } from '../../util/pinyin.js'
    import { ajaxFn,  getLocation, subscribe, storage_get, storage_set, storage_delete, storage_clear } from '../../util/util.js'

    export default {
        data: {
            tabList: [
                {
                    name: '首页',
                    normal: '/static/icon/icon1.png',
                    selected: '/static/icon/icon1-current.png'
                },
                {
                    name: '买车',
                    normal: '/static/icon/icon2.png',
                    selected: '/static/icon/icon2-current.png'
                },
                {
                    name: '卖车',
                    normal: '/static/icon/icon3.png',
                    selected: '/static/icon/icon3-current.png'
                },
                {
                    name: '估价',
                    normal: '/static/icon/icon4.png',
                    selected: '/static/icon/icon4-current.png'
                }
            ],
            tabSelectedIndex: 0,
            location: '',
            selectlocation: '选择城市',
            city: '', // 当前城市
            locationstate: 'currentCity', //默认 currentCity 用 city ,  selectCity 用 selectlocation
            webviewurl: '',
            h: '',
            getLongitude: '',
            getLatitude: '',
            xxx: '',
            showTabs: true,
            PaddBottom100: '100px'
        },
        onInit () {
            
            this.$on('onTabChange', this.onTabChange)
            this.$on('webviewChange', this.webviewChange)
            
            
            // storage_get(storage, 'locationSet', prompt, (locationSet) => {
            //     let json = JSON.parse(locationSet)
            //     this.getLongitude = json.getLongitude
            //     this.getLatitude = json.getLatitude
            // })
        },

        onTabChange( name) {
            // this.$broadcast('currentUrl', {url : name.detail.url})
            this.webviewurl = name.detail.url
            this.tabSelectedIndex = name.detail.params
            // this.userAuthorized(0)
            
        },

        webviewChange(name) {
            this.showTabs = name.detail.showTab
            if(name.detail.showTab) { // 
                this.PaddBottom100 = '100px'
            } else {
                console.log("this.PaddBottom100 = '0px'")
                this.PaddBottom100 = '0px'
            }
            // this.PaddBottom100 = 
            console.log('chage', name.detail.showTab)
        },

        onShow() {
            this.whatCity()
            
        },
        
        // 后端 cooki
        setCookie(cityId) {
            let url = `http://apiwx.taoche.com/ajax/seth5cookie.ashx?cityId=${cityId}`
            console.log('reslailai-index', url) 
            ajaxFn(fetch, url, {}).then((res) => { 
                console.log('res', res) 
            })
        },

        // 用户是否点了 授权， 访问接口
        userAuthorized(key) {
            storage_set(storage, 'userAuthorized', key, prompt, () =>{}) // 存储达到 storage 里面
        },

        // 获取 到底是 那个城市的 具体方法
        whatCity() {
            let httpDefault = 'http://apiwx.taoche.com/api/Generic/Default?'  // 王帅
            let httpGetLocation = 'http://apiwx.taoche.com/api/Generic/GetLocation?'
            let httpGo = 'https://apiwx.taoche.com/api/CarSource/GetUcarList?pageindex=1&pageSize=20&'
            // &cityid=201
            storage_get(storage, 'locationstate', prompt, (cityData) => {
                // let v = {}
                //                 v.cityName = '合肥'
                //                 v.cityId = '101'
                //             this.setCityFn(v)
                console.debug('xxx',cityData)
                console.log("!cityData || cityData == 'currentCity'", !cityData || cityData == 'currentCity')
                if(!cityData || cityData == 'currentCity') {
                    // this.initGetLocation(httpDefault, httpGetLocation, httpGo)
                    this.selectCityFn('currentCity')
                    storage_get(storage, 'locationSet', prompt, (locationSet) => {
                        console.log('current刚进来时', !!locationSet && !!JSON.parse(locationSet).getLongitude)
                        
                        if(!!locationSet && !!JSON.parse(locationSet).getLongitude) {
                            
                            this.cuurentCity(httpDefault, httpGetLocation, httpGo) //当前城市
                        } else {
                            
                            let v = {}
                                v.cityName = '全国'
                                v.cityId = '0'
                            this.setCityFn(v)
                            this.setCookie(0)
                            console.log('v', v.cityName)
                            console.log('httpGo',httpGo)
                            ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                                let json = JSON.parse(cityData.data)
                                console.log()
                                // this.city = json
                                this.setStateFunction(json)
                            })
                            
                            this.firstUse(httpGetLocation, httpDefault, httpGo)
                        }
                    })

                } else {
                    this.selectCityFn('selectCity')
                    console.log('selectCityss')
                    storage_get(storage, 'selectlocation', prompt, (selectData) => {
                        this.h = JSON.parse(selectData).cityName
                        this.setCookie(JSON.parse(selectData).cityId)
                        this.selectlocation = JSON.parse(selectData)
                        this.selectCity(httpDefault, httpGetLocation, httpGo) // 选择城市
                    })
                }
            })
        },

        // 当前城市 区域
        cuurentCity(httpDefault, httpGetLocation, httpGo) {
            storage_get(storage, 'city', prompt, (storage_cityData) => {
                
            let json_cityData = !!storage_cityData ? JSON.parse(storage_cityData) : storage_cityData
                console.log("json_cityData.cityName == '全国",json_cityData != '' )
               
                if( json_cityData != '' ) { // 判断 当前城市 carCityId， 是否存在， 如果存在了
                    this.setCityFn(json_cityData)
                    this.setCookie(json_cityData.cityId)
                    this.h = json_cityData.cityName
                    // this.city = json.data
                    // console.log('city', json_cityData.cityName)
                    this.afterUse(json_cityData, httpGetLocation, httpDefault, httpGo )
                } else { // 不存在 去获取 定位，
                    this.firstUse( httpGetLocation, httpDefault, httpGo )
                }
            })
        },

        setCityStateFunction(json, k) {
            this.selectCityFn(k)  //设置 storage 的状态是选择的城市
            console.log('setCity', json.cityName, json.cityId)
            this.h = json.cityName
            this.setCityFn( json ) //设置 城市数据 到 storage
        },

        // 设置 状态的地方
        setStateFunction(json) {
            inItdata.listData = json.data.usedCarList
            this.$broadcast('propsListData', {params: json.data.usedCarList }) // 将 列表数据 给 列表传过去
        },

        // 全国数据调用
        allData(httpGo) {
            let v = {}
                v.cityName = '全国'
                v.cityId = '0'
            this.setCityFn(v)
            ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                let json = JSON.parse(cityData.data)
                this.setStateFunction(json)
                this.setCityStateFunction(v, 'currentCity')
            })
        },
        
        // 第一次使用 过后 拿到cityId  是 0 时
        national(json_cityData, httpGo) {
            ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                let json = JSON.parse(cityData.data)
                json.data.usedCarList.cityName = '全国'
                this.setStateFunction(json)
                this.setCityStateFunction(json_cityData,  'currentCity')
            })
        },

        // 第一次使用 过后 拿到cityId  不是 0 时
        noNational(json_cityData, json, httpDefault, httpGo) { // 不是全国
            console.log(22, json_cityData.cityName, json.data.cityName)
            if( json_cityData.cityName == json.data.cityName ) { // 城市位置没有变
                this.setCityStateFunction(json_cityData,  'currentCity')
                let url = `${httpGo}cityId=${json.data.cityId}`
                ajaxFn(fetch, url, {}).then((city) => {
                    let jsonCityData = JSON.parse(city.data)
                    this.setStateFunction(jsonCityData)
                })
            } else { // 城市 位置变了
                this.showDialog(2, json, json_cityData, httpGo)
            }
        },

        // 设置 选中数据
        setSelectData(json, k) {
            this.selectCityFn(k)  //设置 storage 的状态是选择的城市
            this.selectlocation = json
        },

        // 第一次使用 过后
        afterUse(json_cityData, httpGetLocation, httpDefault, httpGo ) {
            getLocation(geolocation, prompt, ( location ) => { // 用户同意 获取 经纬度

                this.getLongitude = location.getLongitude
                this.getLatitude = location.getLatitude
                this.locationSet(location)
                
                let url = ''
                if(this.getLongitude) {
                    url = `${httpGetLocation}longitude=${location.getLongitude}&latitude=${location.getLatitude}`
                } else {
                    url = `${httpGetLocation}longitude=0000000000&latitude=00000000`
                }
                console.log('dddd', url)
                
                ajaxFn(fetch, url, {}).then((new_cityData) => { // 将 carCityId， 拿到，存入到 storage 里面
                    let json = JSON.parse(new_cityData.data)
                    console.log('lailailai',  new_cityData.code, json.data.cityId, url, this.getLatitude, '1')
                    
                    // this.city = json.data.cityId
                    if(new_cityData.code == '200') {
                        if(json.data.cityId == 0) { // 不是全国 的情况
                            // this.city = json.data
                            json.data.cityName = '全国'
                            this.noNational(json_cityData, json, httpDefault, httpGo);
                        } else { // 走全国数据
                            this.noNational(json_cityData, json, httpDefault, httpGo);
                        }
                    } else {
                        let v = {}
                            v.cityName = '全国'
                            v.cityId = '0'
                        this.setCityFn(v)
                        ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                            let json = JSON.parse(cityData.data)
                            this.setStateFunction(json)
                            this.setCityStateFunction(v, 'currentCity')
                        })
                    }
                    console.log('lurl  url', this.getLongitude)
                })


            }, () => {
                let v = {}
                    v.cityName = '全国'
                    v.cityId = '0'
                this.setCityFn(v)
                ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                    let json = JSON.parse(cityData.data)
                    this.setStateFunction(json)
                    this.setCityStateFunction(v, 'currentCity')
                })
            })
            
        },

        // 地理位置
        locationSet(locationSet) {
            storage_set(storage, 'locationSet', locationSet, prompt, () =>{}) // 存储达到 storage 里面
        },

        // 用户首次使用
        firstUse(httpGetLocation, httpDefault, httpGo) {
            console.log('第一次允许 进入')
            getLocation(geolocation, prompt, ( location ) => { // 用户同意 获取 经纬度
                console.log('lkkkk', location.getLatitude)
                this.locationSet(location)
                let url = `${httpGetLocation}longitude=${location.getLongitude}&latitude=${location.getLatitude}`
                console.log('第一次允许', url)
                ajaxFn(fetch, url, {}).then((cityData) => { // 将 carCityId， 拿到，存入到 storage 里面
                    let json = JSON.parse(cityData.data)
                    
                    if(json.data.cityId) { // 服务器定位成功
                        this.setCookie(json.data.cityId)
                        let url = `${httpGo}cityId=${json.data.cityId}`
                        ajaxFn(fetch, url, {}).then((city) => {
                            let jsonCityData = JSON.parse(city.data)
                            this.setCityStateFunction(json.data, 'currentCity')
                            this.setStateFunction(jsonCityData)
                        })
                        console.log('第一次允许  去请求 拿到城市数据 id', url)
                    } else { // 定位失败
                        let v = {}
                            v.cityName = '全国'
                            v.cityId = '0'
                        this.setCityFn(v)
                        this.setCookie(0)
                        console.log('第一次允许  去请求 没有拿到城市数据 id', url)
                        ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                            let json = JSON.parse(cityData.data)
                            this.setStateFunction(json)
                            this.setCityStateFunction(v, 'currentCity')
                        })
                    }
                })
            }, () => {
                let v = {}
                    v.cityName = '全国'
                    v.cityId = '0'
                    this.setCityFn(v)
                    this.setCookie(0)
                    console.log('首次进来-定位拒绝')
                ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                    let json = JSON.parse(cityData.data)
                    this.setStateFunction(json)
                    this.setCityStateFunction(v, 'currentCity')
                })
            })
        },
        
        // 选择城市 区域
        selectCity(httpDefault, httpGetLocation, httpGo) {
            storage_get(storage, 'selectlocation', prompt, (selectData) => {
                let jsonParseD = JSON.parse(selectData)
                
                if(jsonParseD.cityId) {
                    // let url = `${httpDefault}cityId=${jsonParseD.cityId}`
                    let url = `${httpGo}cityId=${jsonParseD.cityId}`
                    ajaxFn(fetch, url, {}).then((city) => {
                        
                        let jsonCityData = JSON.parse(city.data)
                        // this.city = jsonCityData
                        this.setSelectData(jsonParseD, 'selectCity')
                        this.setStateFunction(jsonCityData)
                    })
                } else {
                    
                    ajaxFn(fetch, httpGo, {}).then((cityData) => { // 获取全国的 列表数据
                        let data = JSON.parse(cityData.data)
                        
                        data.data.usedCarList.cityName = '全国'
                        this.setSelectData(jsonParseD, 'selectCity')
                        this.setStateFunction(data)
                    })
                }
            })
        },

        // 取消时， 那当前 数据 去哪到 列表
        setList(jsonParseD, httpGo) {
            let url = `${httpGo}cityId=${jsonParseD.cityId}`
            ajaxFn(fetch, url, {}).then((cityData) => { // 获取全国的 列表数据
                let json = JSON.parse(cityData.data)
                this.setStateFunction(json)
                this.setCityStateFunction(jsonParseD, 'currentCity')
            })
        },
        showDialog(what, json, json_cityData, httpGo){
            console.log('json.data.cityName', json.data.cityName)
            let buttons = [{
                    text: '确定',
                    color: '#33dd44'
                },{
                    text: '取消',
                    color: '#cb6edd'
                }];
            prompt.showDialog({
                title: '温馨提示',
                message: '您的当前城市已变更，是否切换为'+ json.data.cityName,
                buttons:buttons,
                success: (data) =>{
                   
                    if(data.index == 0) {
                        let httpDefault = 'http://apiwx.taoche.com/api/Generic/Default?'  // 王帅
                        let httpGetLocation = 'http://apiwx.taoche.com/api/Generic/GetLocation?'
                        let url = `${httpGo}cityId=${json.data.cityId}`
                        console.log('model url', url)
                        ajaxFn(fetch, url, {}).then((city) => {
                            let jsonCityData = JSON.parse(city.data)
                            this.city = json.data
                            this.setStateFunction(jsonCityData)
                            this.setCityStateFunction(json.data, 'currentCity')
                        })
                    } else if(data.index == 1) {
                        this.setList(json_cityData, httpGo)
                    }
                },
                cancel: (data) =>{
                    console.log('liangxxx',json_cityData.cityId, json_cityData. cityName)
                    this.setList(json_cityData, httpGo)
                },
                fail: (data, code) =>{
                    console.log("handling fail, code=" + code);
                }
            })
        },

        // 设置定位的城市
        setCityFn(cityData) {
            this.city = cityData
            storage_set(storage, 'city', cityData, prompt, () =>{}) // 存储达到 storage 里面
        },

        // 设置 选中的城市 ,在选中状态
        selectCityFn(cityData) {
            this.locationstate = cityData
            storage_set(storage, 'locationstate', cityData, prompt, () =>{}) // 存储达到 storage 里面
        },

        

        // 点击tabr 的方法
        tabItemClick(index) {
            console.log('inde---', index)
            let text = ''
            let a = Math.random()
            console.log('this.hzzzzzzzzzzzz',this.h)
            if(CC2PY(this.h).toLowerCase() == 'zhongqing') {
                text = 'chongqing'
            } else {
                text = CC2PY(this.h).toLowerCase()
            }
            if(index == 1) {
                this.webviewurl = `http://${text}.m.taoche.com/kuaiyingyong/all/`
                // this.webviewurl = `http://192.168.159.150:8080/m/tc-detail-bigimg/detail-bigimg.html?v=${Math.random()}`
            } else if(index == 2) {
                this.webviewurl = `http://cooper.m.taoche.com/cooper/sellcar/`
            } else if(index == 3) {
                this.webviewurl = `http://cooper.m.taoche.com/pinggu/`
            }
            this.tabSelectedIndex = index;
        },
        tabsChange(e) {
            this.tabSelectedIndex = e.index;
        },
    }
</script>

<style>
    .box-Main{
        display: flex;
        flex-direction: column;
    }
    .slef{
        
        height: 100%;
        column: 1;
        /* padding-bottom: 100px; */
        /* margin-top: 100px; */
        /* padding-bottom: 100px;
        margin-top: 100px;
        height: 700px;
        width: 100%;
        background-color: #FF6402; */
    }
    .mian_box{
        align-items:flex-end;
        position: fixed;
        bottom:0;
        left: 0;
        height: 100px;
        border-top-color: #dbdbdb;
        border-top-width: 1px;
        background-color: #ffffff;
    }
    .box{
        height: 100px;
        width: 100%;
    }
    #tab{
        height: 100px;
    }
    .tab-item {
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 120px;
    }
    .tab-icon {
        width: 50px;
        height: 50px;
    }
    tab-bar {
        align-items:flex-end;
        height: 100px;
        border-top-color: #DDDDDD;
        border-top-width: 1px;
    }
    .normal {
        color: #818D9A;
    }
    .selected {
        color: #FF6402;
    }
</style>